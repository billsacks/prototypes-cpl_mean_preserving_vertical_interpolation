#!/usr/bin/env python

from __future__ import print_function
from __future__ import division

import sys
import os.path
import traceback

if sys.hexversion < 0x02070000:
    print(70 * "*")
    print("ERROR: {0} requires python >= 2.7.x. ".format(sys.argv[0]))
    print("It appears that you are running python {0}".format(
        ".".join(str(x) for x in sys.version_info[0:3])))
    print(70 * "*")
    sys.exit(1)

import argparse

import math
import bisect
from netCDF4 import Dataset

from interpolator import Interpolator
from utils import find_index_from_lat_lon, get_l2x_data

# ------------------------------------------------------------------------
# Parameters
# ------------------------------------------------------------------------

ELEVCLASS_BOUNDS = [0., 200., 400., 700., 1000., 1300., 1600.,
                    2000., 2500., 3000., 10000.]
NUM_EC = 10

# ------------------------------------------------------------------------
# Begin main code
# ------------------------------------------------------------------------

def commandline_options():
    """Process command-line arguments"""

    parser = argparse.ArgumentParser(
        description = 'Plot interpolation for one land point'
        )

    parser.add_argument('--cplhist_filename', required=True,
                        help='path to cpl hist file')

    parser.add_argument('--map_filename', required=True,
                        help='path to lnd2glc mapping file')

    parser.add_argument('--index', required=True, type=int,
                        help='land index')

    parser.add_argument('--plot_filename', required=True,
                        help='path to plot file')

    parser.add_argument('--backtrace', action='store_true',
                        help='show exception backtraces as extra debugging output')

    options = parser.parse_args()
    return options

def main(options):
    mapfile = Dataset(options.map_filename)
    cplhist = Dataset(options.cplhist_filename)

    pt = options.index
    my_lon = mapfile.variables['xc_a'][:][pt]
    my_lat = mapfile.variables['yc_a'][:][pt]
    print("lat = {0}, lon = {1}".format(my_lat, my_lon))

    doml_lon = cplhist.variables['doml_lon'][:]
    doml_lat = cplhist.variables['doml_lat'][:]

    cplhist_index = find_index_from_lat_lon(doml_lat, doml_lon, my_lat, my_lon)
    print("cplhist_index = {0}".format(cplhist_index))
    (topo, smb) = get_l2x_data(cplhist, cplhist_index)

    # convert to m/yr
    smb = smb * 31536.0

    interpolator = Interpolator(ELEVCLASS_BOUNDS, topo, smb)
    interpolator.draw_figure(options.plot_filename)

if __name__ == "__main__":
    options = commandline_options()
    try:
        status = main(options)
        sys.exit(status)
    except Exception as error:
        print(str(error))
        if options.backtrace:
            traceback.print_exc()
        sys.exit(1)


